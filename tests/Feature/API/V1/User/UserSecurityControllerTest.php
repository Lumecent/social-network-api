<?php

namespace Tests\Feature\API\V1\User;

use Tests\BaseTest;

class UserSecurityControllerTest extends BaseTest
{
    private $dataPassword;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->initAuthoriseRequest();

        $this->dataPassword = [
            'password_old' => 'password',
            'password' => 'new_password',
            'password_confirm' => 'new_password'
        ];

        $this->urls = [
            'password' => "api/v1/user/{$this->user->alias}/settings/password"
        ];
    }

    public function testUpdatePasswordEmptyForm()
    {
        $response = $this->putJson($this->urls['password'], [], $this->header);

        $response->assertStatus(422);
    }

    public function testUpdatePasswordWrongPasswordOld()
    {
        $this->dataPassword['password_old'] = 'p@ssword';

        $response = $this->putJson($this->urls['password'], $this->dataPassword, $this->header);

        $response->assertStatus(422);
    }

    public function testUpdatePasswordWrongPassword()
    {
        $this->dataPassword['password'] = 'new';

        $response = $this->putJson($this->urls['password'], $this->dataPassword, $this->header);

        $response->assertStatus(422);
    }

    public function testUpdatePasswordWrongPasswordConfirm()
    {
        $this->dataPassword['password_confirm'] = 'new';

        $response = $this->putJson($this->urls['password'], $this->dataPassword, $this->header);

        $response->assertStatus(422);
    }

    public function testUpdatePassword()
    {
        $response = $this->putJson($this->urls['password'], $this->dataPassword, $this->header);

        $response->assertStatus(200);
    }
}
