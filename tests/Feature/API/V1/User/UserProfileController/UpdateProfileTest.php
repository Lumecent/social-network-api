<?php

namespace Tests\Feature\API\V1\User\UserProfileController;

use App\Helpers\Test\TestHelper;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class UpdateProfileTest extends TestCase
{
    protected $token;
    protected $headers;
    protected $user;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->token = TestHelper::authToken();
        $this->headers = ['Authorization' => "Bearer {$this->token}"];
        $this->user = TestHelper::getUser();
    }

    public function testUpdateProfileEmptyForm()
    {
        $response = $this->putJson('api/v1/user/' . $this->user->alias . '/settings/profile', [], $this->headers);

        $response->assertStatus(422);
    }

    public function testUpdateProfileWrongAlias()
    {
        $data = [
            'alias' => 'i mustafa',
            'info' => 'Hi! My name is Mustafa',
            'date_bd' => '1988-10-05'
        ];

        $response = $this->putJson('api/v1/user/' . $this->user->alias . '/settings/profile', $data, $this->headers);

        $response->assertStatus(422);
    }

    public function testUpdateProfileNotUniqueAlias()
    {
        $user = TestHelper::getRandomUser();

        $data = [
            'alias' => $user->alias,
            'info' => 'Hi! My name is Mustafa',
            'date_bd' => '1988-10-05'
        ];

        $response = $this->putJson('api/v1/user/' . $this->user->alias . '/settings/profile', $data, $this->headers);

        $response->assertStatus(422);
    }

    public function testUpdateProfileWrongInfo()
    {
        $data = [
            'alias' => 'mustafa',
            'info' => 'Hi! My name is Mustafa Hi! My name is Mustafa Hi! My name is Mustafa Hi! My name is Mustafa '
               . 'Hi! My name is Mustafa Hi! My name is Mustafa Hi! My name is Mustafa Hi! My name is Mustafa '
               . 'Hi! My name is Mustafa Hi! My name is Mustafa Hi! My name is Mustafa Hi! My name is Mustafa '
               . 'Hi! My name is Mustafa Hi! My name is Mustafa Hi! My name is Mustafa Hi! My name is Mustafa '
               . 'Hi! My name is Mustafa Hi! My name is Mustafa Hi! My name is Mustafa Hi! My name is Mustafa '
               . 'Hi! My name is Mustafa Hi! My name is Mustafa Hi! My name is Mustafa Hi! My name is Mustafa '
               . 'Hi! My name is Mustafa Hi! My name is Mustafa Hi! My name is Mustafa Hi! My name is Mustafa '
               . 'Hi! My name is Mustafa Hi! My name is Mustafa Hi! My name is Mustafa Hi! My name is Mustafa '
               . 'Hi! My name is Mustafa Hi! My name is Mustafa Hi! My name is Mustafa Hi! My name is Mustafa '
               . 'Hi! My name is Mustafa Hi! My name is Mustafa Hi! My name is Mustafa Hi! My name is Mustafa '
               . 'Hi! My name is Mustafa Hi! My name is Mustafa Hi! My name is Mustafa Hi! My name is Mustafa '
               . 'Hi! My name is Mustafa Hi! My name is Mustafa Hi! My name is Mustafa Hi! My name is Mustafa '
               . 'Hi! My name is Mustafa Hi! My name is Mustafa Hi! My name is Mustafa Hi! My name is Mustafa ',
            'date_bd' => '1988-10-05'
        ];

        $response = $this->putJson('api/v1/user/' . $this->user->alias . '/settings/profile', $data, $this->headers);

        $response->assertStatus(422);
    }

    public function testUpdateProfileWrongDateBD()
    {
        $data = [
            'alias' => 'mustafa',
            'info' => 'Hi! My name is Mustafa',
            'date_bd' => '2100-10-05'
        ];

        $response = $this->putJson('api/v1/user/' . $this->user->alias . '/settings/profile', $data, $this->headers);

        $response->assertStatus(422);
    }

    public function testUpdateProfile()
    {
        $data = [
            'alias' => 'mustafa',
            'info' => 'Hi! My name is Mustafa',
            'date_bd' => '1988-10-05'
        ];

        $response = $this->putJson('api/v1/user/' . $this->user->alias . '/settings/profile', $data, $this->headers);

        $response->assertStatus(200);
    }
}
