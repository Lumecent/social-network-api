<?php

namespace Tests\Feature\API\V1\User\UserSecurityController;

use App\Helpers\Test\TestHelper;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class UpdatePasswordTest extends TestCase
{
    protected $token;
    protected $headers;
    protected $user;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->token = TestHelper::authToken();
        $this->headers = ['Authorization' => "Bearer {$this->token}"];
        $this->user = TestHelper::getUser();
    }

    public function testUpdatePasswordEmptyForm()
    {
        $response = $this->putJson("api/v1/user/{$this->user->alias}/settings/password", [], $this->headers);

        $response->assertStatus(422);
    }

    public function testUpdatePasswordWrongPasswordOld()
    {
        $data = [
            'password_old' => 'p@ssword',
            'password' => 'new_password',
            'password_confirm' => 'new_password'
        ];

        $response = $this->putJson("api/v1/user/{$this->user->alias}/settings/password", $data, $this->headers);

        $response->assertStatus(422);
    }

    public function testUpdatePasswordWrongPassword()
    {
        $data = [
            'password_old' => 'password',
            'password' => 'new',
            'password_confirm' => 'new_password'
        ];

        $response = $this->putJson("api/v1/user/{$this->user->alias}/settings/password", $data, $this->headers);

        $response->assertStatus(422);
    }

    public function testUpdatePasswordWrongPasswordConfirm()
    {
        $data = [
            'password_old' => 'password',
            'password' => 'new_password',
            'password_confirm' => 'new'
        ];

        $response = $this->putJson("api/v1/user/{$this->user->alias}/settings/password", $data, $this->headers);

        $response->assertStatus(422);
    }

    public function testUpdatePassword()
    {
        $data = [
            'password_old' => 'password',
            'password' => 'new_password',
            'password_confirm' => 'new_password'
        ];

        $response = $this->putJson("api/v1/user/{$this->user->alias}/settings/password", $data, $this->headers);

        $response->assertStatus(200);
    }
}
