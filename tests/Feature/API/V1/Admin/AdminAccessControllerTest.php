<?php

namespace Tests\Feature\API\V1\Admin;

use App\Helpers\Test\TestHelper;
use Tests\BaseTest;

class AdminAccessControllerTest extends BaseTest
{
    private $dataAccess;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->initAuthoriseRequest();

        $this->dataAccess = [
            'id' => TestHelper::getLastAccess()->id,
            'name' => $this->faker->lastName,
        ];

        $this->urls = [
            'access' => 'api/v1/admin/access'
        ];
    }

    public function testCreateAccessEmptyForm()
    {
        $response = $this->postJson($this->urls['access'], [], $this->header);

        $response->assertStatus(422);
    }

    public function testCreateAccessWrongName()
    {
        $this->dataAccess['name'] = 'n@me';

        $response = $this->postJson($this->urls['access'], $this->dataAccess, $this->header);

        $response->assertStatus(422);
    }

    public function testCreateAccess()
    {
        $response = $this->postJson($this->urls['access'], $this->dataAccess, $this->header);

        $response->assertStatus(200);
    }

    public function testUpdateAccessWrongName()
    {
        $this->dataAccess['name'] = 'n@me';

        $response = $this->putJson("{$this->urls['access']}/{$this->dataAccess['id']}", $this->dataAccess, $this->header);

        $response->assertStatus(422);
    }

    public function testUpdateAccessNotExistsAccess()
    {
        $this->dataAccess['id'] = 0;

        $response = $this->putJson("{$this->urls['access']}/{$this->dataAccess['id']}", $this->dataAccess, $this->header);

        $response->assertStatus(422);
    }

    public function testUpdateAccess()
    {
        $response = $this->putJson("{$this->urls['access']}/{$this->dataAccess['id']}", $this->dataAccess, $this->header);

        $response->assertStatus(200);
    }

    public function testDeleteAccessNotExistsAccess()
    {
        $this->dataAccess['id'] = 0;

        $response = $this->deleteJson("{$this->urls['access']}/{$this->dataAccess['id']}", $this->dataAccess, $this->header);

        $response->assertStatus(422);
    }

    public function testDeleteAccess()
    {
        $response = $this->deleteJson("{$this->urls['access']}/{$this->dataAccess['id']}", $this->dataAccess, $this->header);

        $response->assertStatus(200);
    }
}
